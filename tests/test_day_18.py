import pytest
from aoc2021.day_18 import (
    parse_homework,
    first_task,
    second_task,
    add_all,
    SnailfishNumber,
)


@pytest.mark.parametrize(
    "number,expected",
    [
        ("[[[[[9,8],1],2],3],4]", "[[[[0,9],2],3],4]"),
        ("[7,[6,[5,[4,[3,2]]]]]", "[7,[6,[5,[7,0]]]]"),
        ("[[6,[5,[4,[3,2]]]],1]", "[[6,[5,[7,0]]],3]"),
        ("[[3,[2,[1,[7,3]]]],[6,[5,[4,[3,2]]]]]", "[[3,[2,[8,0]]],[9,[5,[7,0]]]]"),
        ("[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]", "[[3,[2,[8,0]]],[9,[5,[7,0]]]]"),
    ],
)
def test_number_simplify(number: str, expected: str) -> None:
    snailfish_number = SnailfishNumber.parse(number)

    snailfish_number.simplify()

    assert str(snailfish_number) == expected


@pytest.mark.parametrize(
    "left,right,expected_sum",
    [
        ("[[[[4,3],4],4],[7,[[8,4],9]]]", "[1,1]", "[[[[0,7],4],[[7,8],[6,0]]],[8,1]]"),
        (
            "[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]",
            "[7,[[[3,7],[4,3]],[[6,3],[8,8]]]]",
            "[[[[4,0],[5,4]],[[7,7],[6,0]]],[[8,[7,7]],[[7,9],[5,0]]]]",
        ),
    ],
)
def test_add(left: str, right: str, expected_sum: str) -> None:
    left_number = SnailfishNumber.parse(left)
    right_number = SnailfishNumber.parse(right)

    summa = left_number + right_number

    assert str(summa) == expected_sum


@pytest.mark.parametrize(
    "homework,expected_sum",
    [
        (
            """[1,1]
[2,2]
[3,3]
[4,4]""",
            "[[[[1,1],[2,2]],[3,3]],[4,4]]",
        ),
        (
            """[1,1]
[2,2]
[3,3]
[4,4]
[5,5]""",
            "[[[[3,0],[5,3]],[4,4]],[5,5]]",
        ),
        (
            """[1,1]
[2,2]
[3,3]
[4,4]
[5,5]
[6,6]""",
            "[[[[5,0],[7,4]],[5,5]],[6,6]]",
        ),
        (
            """[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]
[7,[[[3,7],[4,3]],[[6,3],[8,8]]]]
[[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]
[[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]
[7,[5,[[3,8],[1,4]]]]
[[2,[2,2]],[8,[8,1]]]
[2,9]
[1,[[[9,3],9],[[9,0],[0,7]]]]
[[[5,[7,4]],7],1]
[[[[4,2],2],6],[8,7]]""",
            "[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]",
        ),
    ],
)
def test_add_all(homework: str, expected_sum: str) -> None:
    numbers = parse_homework(homework)

    summa = add_all(numbers)

    assert str(summa) == expected_sum


def test_first_task() -> None:
    test_homework = """[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]"""

    assert first_task(test_homework) == 4140


def test_second_task() -> None:
    test_homework = """[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]"""

    assert second_task(test_homework) == 3993
